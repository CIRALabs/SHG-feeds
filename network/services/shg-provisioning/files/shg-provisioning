#!/bin/sh /etc/rc.common
#
# Onboarding script for SHG

START=80
STOP=00
USE_PROCD=1

#info() { echo $@; }
#error(){ >&2 echo $@; }
info() { logger -t shg-provisioning -p info $@; }
error() { logger -t shg-provisioning -p err $@; }
check_error() {
    if [ $? -ne 0 ]; then
        error $@
        exit 1
    fi
}

start_service() {
    WELL_KNOWN_FILE="/etc/shg/onboarded"
    WORKING_DIR="/etc/shg"
    TGZ_NAME="shg-filesystem"
    POSTINST_SCRIPT="./postinst.sh"

    if [ -f /etc/shg/provisioningDomain ]; then
        WELL_KNOWN_DOMAIN=$(cat /etc/shg/provisioningDomain)
    else
        WELL_KNOWN_DOMAIN="r.securehomegateway.ca"
    fi

    export WORKING_DIR TGZ_NAME WELL_KNOWN_FILE

    procd_add_mdns "router" "tcp" "80"

    # Router is already onboarded
    if [ -f $WELL_KNOWN_FILE ]; then
        info "Already onboarded"
        exit 0;
    fi


    # Add the ciralabs package repo to customfeeds...if it's not there already...
    if ! grep -q ciralabs /etc/opkg/customfeeds.conf; then
    	echo 'src/gz ciralabs http://build.securehomegateway.ca/hbl/mox/packages/ciralabs' >> /etc/opkg/customfeeds.conf
    fi

    # check if device has a WAN
    if [ -z "$(uci get network.wan.iface)" ]; then
        if [ ! -f ${WELL_KNOWN_FILE}_WAN ]; then
            uci set network.wan=interface
            uci set network.wan.ifname=eth0
            uci set network.wan.proto='dhcp'
            uci set network.wan6=interface
            uci set network.wan6.ifname=eth0
            uci set network.wan6.proto='dhcpv6'
            uci commit
            ifup wan
            touch ${WELL_KNOWN_FILE}_WAN
            info "Rebooting with new WAN configuration on ETH0"
            sleep 1
            reboot
        fi
    fi

    # core of work
    if /usr/sbin/enroll-certificate && [ -f ${WORKING_DIR}/${TGZ_NAME}.tgz ]; then
        info "Successful enrollment"
    else
        # fail.  Maybe should reboot?
        exit 5
    fi

    # Extract tgz file
    info "Filesystem successfully retrieved, install it..."
    cd /
    tar --no-same-owner -x -z -f ${WORKING_DIR}/${TGZ_NAME}.tgz 1>/dev/null
    check_error "Failed to extract filesystem tgz"

    cd ${WORKING_DIR}
    KEY="/etc/shg/shg.key"
    CERTIF="/etc/shg/idevid_cert.pem"
    INTERMEDIATE="/etc/shg/intermediate_certs.pem"
    OUTPUT="/etc/shg/lighttpd.pem"

    cat ${KEY} ${CERTIF}         > ${OUTPUT}

    mkdir -p /etc/shg/certificates
    cp ${KEY}                      /etc/shg/certificates/jrc_prime256v1.key
    cat ${CERTIF} ${INTERMEDIATE} >/etc/shg/certificates/jrc_prime256v1.crt
    cp masa.crt                    /etc/shg/certificates/masa.crt

    check_error "Failed to create certificate for lighttpd"
    chmod 600 ${OUTPUT}

    if [ -d extra ] ; then
        (cd extra; find . -type f -print | while read file
         do
             cat $file >>/$file
         done)
    fi

    # now setup the umdnsd service with the right info.
    HOSTNAME=$(cat /etc/shg/hostname)
    FQDNNAME=${HOSTNAME}.${WELL_KNOWN_DOMAIN}
    mkdir -p /etc/umdns
    cat >/etc/umdns/windex.json <<EOF
{ "windex" : {
        "port" : 443,
        "service" : "_windex._tcp.local",
        "txt" : [ "windex=https://${FQDNNAME}/shg" ]
        }
}
EOF

    # Run post-installation script, if it exists.
    cd ${WORKING_DIR}
    if [ -x ${POSTINST_SCRIPT} ]; then
        ${POSTINST_SCRIPT}
    fi

    LAN_DEV_NAME="br-lan"
    IP6_ULA=$(ip addr show dev ${LAN_DEV_NAME} | grep -m1 -w -o -e 'f[cd][a-f0-9]\{2\}:[^/]*')
    # populate the /etc/hosts file with more names: IPv4 and IPv6
    echo "192.168.1.1  $FQDNNAME" >>/etc/hosts
    echo "${IP6_ULA}   $FQDNNAME" >>/etc/hosts

    check_error "Failed to run post-installation script"

    # Set the well-known file to avoid subsequent onboarding
    touch ${WELL_KNOWN_FILE}

    # just make sure stuff not writable.
    chmod g-w / /root
    [ -d /root/.ssh ] && chmod g-w /root/.ssh
    [ -f /root/.ssh/authorized_keys ] && chmod g-w /root/.ssh/authorized_keys

    # scp fix
    if [ ! -x /usr/bin/scp ]; then
        ln -s openssh-scp /usr/bin/scp
    fi

    # Reboot
    info "Filesystem installed, reboot..."
    reboot
}

