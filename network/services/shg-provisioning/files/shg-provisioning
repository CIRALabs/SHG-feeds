#!/bin/sh /etc/rc.common
#
# Onboarding script for SHG on Turris Omnia

START=80
STOP=00
USE_PROCD=1

#info() { echo $@; }
#error(){ >&2 echo $@; }
info() { logger -t shg-provisioning -p info $@; }
error() { logger -t shg-provisioning -p err $@; }
check_error() {
    if [ $? -ne 0 ]; then
        error $@
        exit 1
    fi
}

start_service() {
    WELL_KNOWN_FILE="/etc/shg/onboarded"
    WORKING_DIR="/etc/shg"
    TGZ_NAME="shg-filesystem"
    mkdir -p /etc/shg /srv/lxc/mud-supervisor/rootfs/root

    export WORKING_DIR TGZ_NAME

    # core of work
    /etc/shg/enroll-certificate

    # Extract tgz file
    info "Filesystem successfully retrieved, install it..."
    cd /
    tar --no-same-owner -x -z -f ${WORKING_DIR}/${TGZ_NAME}.tgz 1>/dev/null
    check_error "Failed to extract filesystem tgz"

    cd ${WORKING_DIR}
    if [ ! -f .done20190628 ]; then

        KEY="/etc/shg/shg.key"
        CERTIF="/etc/shg/idevid_cert.pem"
        INTERMEDIATE="/etc/shg/intermediate_certs.pem"
        OUTPUT="/etc/shg/lighttpd.pem"

        cat ${KEY} ${CERTIF}         > ${OUTPUT}

        mkdir -p /etc/shg/certificates
        cp ${KEY}                      /etc/shg/certificates/jrc_prime256v1.key
        cat ${CERTIF} ${INTERMEDIATE} >/etc/shg/certificates/jrc_prime256v1.crt
        cp masa.crt                    /etc/shg/certificates/masa.crt

        check_error "Failed to create certificate for lighttpd"
        chmod 600 ${OUTPUT}

        if [ -d extra ] ; then
            (cd extra; find . -type f -print | while read file
             do
                 cat $file >>/$file
             done)
        fi
        touch .done20190628
    fi

    # Run post-installation script, if it exists.
    cd ${WORKING_DIR}
    if [ -x ${POSTINST_SCRIPT} ]; then
        ${POSTINST_SCRIPT}
    fi

    check_error "Failed to run post-installation script"

    # Set the well-known file to avoid subsequent onboarding
    touch ${WELL_KNOWN_FILE}

    # just make sure stuff not writable.
    chmod g-w / /root
    [ -d /root/.ssh ] && chmod g-w /root/.ssh
    [ -f /root/.ssh/authorized_keys ] && chmod g-w /root/.ssh/authorized_keys


    # Reboot
    info "Filesystem installed, reboot..."
    reboot
}

